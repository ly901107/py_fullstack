作者:Lex
版本:版本 v1.0
程序介绍:

管理员：
    创建老师：姓名、性别、年龄、资产
    创建课程：课程名称、上课时间、课时费、关联老师
学生：
    用户名、密码、性别、年龄、选课列表[]、上课记录{课程1：【di,a,】}

1. 管理员设置课程信息和老师信息
2. 老师上课获得课时费
3. 学生上课，学到“上课内容”
4. 学生可自选课程
5. 学生可查看已选课程和上课记录
6. 学生可评价老师，差评老师要扣款
7. 使用pickel

程序结构:
course_selection_system/
 ├── README
 ├── __init__.py
 ├── bin #选课系统 执行文件 目录
 │   ├── __init__.py
 │   ├── start.py           #执行选课系统-主程序
 │   └── admin              #执行选课系统-管理员注册
 │
 ├── conf #配置文件
 │   ├── __init__.py
 │   └── settings.py        #数据库路径
 │
 ├── core #主要程序逻辑都 在这个目录 里
 │   ├── __init__.py
 │   ├── accounts.py        #账户模块，包括登陆和学生注册
 │   ├── auth.py            #数据认证模块
 │   ├── db_handler.py      #数据保存、下载模块
 │   ├── main_new.py        #主程序
 │   ├── models.py          #定义的类信息
 │   └── models_v1.py       #没有优化的类信息，已不用
 │  
 ├── db #数据存储
 │   ├── __init__.py
 │   ├─accounts.py              #用户账号密码，包括admin，teacher，student
 │   ├─class_register.py        #上课记录
 │   ├─course.py                #课程
 │   ├─course_selection.py      #选课列表
 │   ├─feedback_record.py       #评价记录
 │   ├─student.py               #学生信息
 │   └─teacher.py               #老师信息
 │
 ├── lib #用户数据存储的地方
 │   ├── __init__.py
 │   └── common.py              #创建ID，以时间戳为准，作为数据保存的名称
 │
 └── log #日志目录
      └── __init__.py

总结：
1. 功能基本完成，尽可能的使用装饰器简洁代码
2. 对于面向对象的编程还是有些只知其然而不知其所以然，比如是否需将定义的类 分成一个个模块等，还需多联系，多参考学习别人的源码。